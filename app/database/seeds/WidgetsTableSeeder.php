<?php

class WidgetsTableSeeder extends Seeder {

	public function run()
	{
		 //Uncomment the below to wipe the table clean before populating
		 //DB::table('widgets')->truncate();

		$widgets = array(

  array(
  	'name' => 'Top Customers',
  	'class' => 'TopCustomers',
  	'example_img' => 'TopCustomers',
  	'subscription_plan' => 'Regular',
	'description' => 'This leaderboard shows the Top 10 Customers by traffic volume over the last 30 days. Incoming and Outgoing traffic is considered. The board is updated daily.',
	'description_ext' => '',
    'area' => 'Sales',
  ), array('name' => 'Number of Inactive Customers',
  	'class' => 'InactiveCustomers',
  	'example_img' => 'InactiveAccounts',
  	'subscription_plan' => 'Regular',
	'description' => 'The widget shows the number of inactive customers that are not suspended or blocked. Inactive customers are those that have not made a call within X days (By Default X=7 Days, customizable). Updated daily. ',
	'description_ext' => '',
    'area' => 'Sales',
  ), array('name' => 'Active Calls',
  	'class' => 'ActiveCalls',
  	'example_img' => 'ActiveCalls',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This widget shows the current active calls (updated every 10min) as well as the trend of active calls over 7 days.',
	'description_ext' => '',
  ), array('name' => 'New Active Customers',
  	'class' => 'NewActiveCustomers',
  	'example_img' => 'NewActiveCustomers',
  	'subscription_plan' => 'Regular',
	'area' => 'Sales',
	'description' => 'This widget shows the current number of new, active customers per day as well their trend over 30 days. Active customers are those with at least 1 call. Updated daily.',
	'description_ext' => '',
  ), array('name' => 'Number Of Customers With Overdue Invoices',
  	'class' => 'OverdueInvoices',
  	'example_img' => 'OverdueInvoices',
  	'subscription_plan' => 'Regular',
	'area' => 'Sales',
	'description' => 'These Pins simply show the current number of overdue invoices. Updated daily.',
	'description_ext' => '',
  ), array('name' => 'Generated Revenue & Incurred Cost',
  	'class' => 'CostRevenuePerDay',
  	'example_img' => 'RevenuePerDay',
  	'subscription_plan' => 'Regular',
	'area' => 'Finance',
	'description' => 'This graph shows the total generated revenue per day, with the trend over 30 days. ',
	'description_ext' => 'Revenue considered are any service revenues (voice, data, etc) but no taxes (for those customers who have their taxes as separate CDR) and no subscriptions. Revenue considered is "billed revenue", and not collected revenue. Cost is the sum of the charges owed to vendors.',
  ), array('name' => 'Revenue This Month',
  	'class' => 'RevenueCurrentMonth',
  	'example_img' => 'RevenueCurrentMonth',
  	'subscription_plan' => 'Regular',
	'area' => 'Finance',
	'description' => 'The widget tracks the revenue of the current month towards a customizable goal. It uses the exact same definition of revenue as the revenue graph widget.',
	'description_ext' => '',
  ), array('name' => 'Number Of Calls Per Day',
  	'class' => 'CallsPerDay',
  	'example_img' => 'CallsPerDay',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This widget shows the number of calls per day (updated every 1h for the current day) as well as the trend of number of calls over 30 days.',
	'description_ext' => '',
  ), array('name' => 'ASR & NER',
  	'class' => 'ASRNER',
  	'example_img' => 'NetworkStats',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This gauge shows the total network ASR (Answer Seize Ratio) and NER (network efficiency ratio) calculated across all vendors, considering outgoing connections only. ',
	'description_ext' => 'ASR is calculated as the ratio of successful calls (cause code 16) to attempted calls. No onnet calls are considered. Generally, attempted calls equals to the sum of billable calls, and failed calls.NER is defined to be the ratio of the sum of calls that were successful, user busy, no answer, or were rejected by the callee to attempted calls. Calculated across all Vendors, only outgoing connections are considered. User Busy: cause code 17 (considered failed)User No Answer: cause code 18/19 (considered failed)User Rejected: cause code 21 (considered failed)Since NER takes into account failed calls due to callee action, this reflects more truly the network efficiency or performance of the network.',
  ), array('name' => 'Call Volume',
  	'class' => 'VolumePerMonth',
  	'example_img' => 'VolumePerMonth',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This graph shows the total call volume ( ONNET) per day, tracked over 30 days.',
	'description_ext' => '',
  ), array('name' => 'Total Registered Locations',
  	'class' => 'RegisteredLocations',
  	'example_img' => 'TotalRegistrations',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This counter shows you the total number of registered locations, and its trend over the last 30 days.',
	'description_ext' => '',
  ), array('name' => 'Connection Utilization (OB)',
  	'class' => 'ConnectionUtilization',
  	'example_img' => 'ConnectionUtilization',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table shows you the top 10 connections and their utilization rate (% of max channels). If Utilization is above 90% there will be a red indicator, above 75% yellow and below 75% green.',
	'description_ext' => '',
  ), array('name' => 'ACD',
  	'class' => 'ACD',
  	'example_img' => 'ALOC',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This widget will show the current network ALOC/ACD (average length of calls) for  outbound calls. This excludes ONNET calls.',
	'description_ext' => '',
  ), array('name' => 'Failed Calls',
  	'class' => 'FailedCalls',
  	'example_img' => 'FailedCalls',
  	'subscription_plan' => 'Premium',
	'area' => 'Network',
	'description' => 'This table shows you failed calls grouped by disconnect reason, and customer. Tallied over a customizable timeframe (default 10min) this table shows customer name, account, CLI, CLD, how many calls in question, the disconnect code & reason and vendor for this call.',
	'description_ext' => '',
  ), array('name' => 'ACD & PDD By Vendor',
  	'class' => 'ACDByVendor',
  	'example_img' => 'ACDPDDByVendor',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table shows you the ACD (Average Length of Calls), PDD, Number of Calls, and total Minutes by Vendor. There is also an indicator of red/yellow/green that looks at the PDD. Threshold values for this indicator can be customized, by default they are red: over 10s, yellow over 4s, green: under 4s.',
	'description_ext' => '',
  ), array('name' => 'Call Loss Ratio',
  	'class' => 'CLR',
  	'example_img' => 'CLR',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'CLR is calculated as the ratio of failed calls due to network issues to attempted calls.',
	'description_ext' => '',
  ), array('name' => 'Nr Of Short Calls',
  	'class' => 'UnusualCalls',
  	'example_img' => 'ShortCalls',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table will show you a  list of top 10 destinations with short calls ("short" is by default less than 10s but this can be customized), the number of these calls, the vendor, and the ACD.',
	'description_ext' => '',
  ), array('name' => 'Nr Of Long Calls',
  	'class' => 'UnusualCalls',
  	'example_img' => 'ShortCalls',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table will show you a list of top 10 destinations with long calls ("long" is by default more than 2hrs but can be customized), the number of these calls, the vendor, and the ACD.',
	'description_ext' => '',
  ), array('name' => 'Top 10 Destinations',
  	'class' => 'TopDestinations',
  	'example_img' => 'TopDestinations',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table will show you a list of top 10 destinations by number of calls',
	'description_ext' => '',
  ), array('name' => 'Top Vendors (Outbound)',
  	'class' => 'TopVendors',
  	'example_img' => 'TopVendors',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table will show you a list of top 10 outbound vendors by traffic, split by connection and the total number of minutes of these connections.',
	'description_ext' => '',
  ), array('name' => 'Top Vendors (Inbound)',
  	'class' => 'TopVendors',
  	'example_img' => 'TopVendors',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table will show you a list of top 10 inbound vendors by traffic, split by connection and the total number of minutes of these connections.',
	'description_ext' => '',
  ), array('name' => 'PDD',
  	'class' => 'PDD',
  	'example_img' => 'PDD',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This widget shows the current PDD across the network, and it\'s trend over the last 30 days.',
	'description_ext' => '',
  ), array('name' => 'Active Calls by Customer',
  	'class' => 'ActiveCallsByCustomer',
  	'example_img' => '',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => '',
	'description_ext' => '',
  ), array('name' => 'Call volume by Customer',
  	'class' => 'VolumeByCustomer',
  	'example_img' => '',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => '',
	'description_ext' => '',
  ), array('name' => 'Number Of Customers With Unpaid Invoices',
  	'class' => 'OverdueInvoices',
  	'example_img' => '',
  	'subscription_plan' => 'Regular',
	'area' => 'Sales',
	'description' => 'These Pins simply show the current number of unpaid invoices. Updated daily.',
	'description_ext' => '',
  ), array('name' => 'Connection Utilization (IB)',
  	'class' => 'ConnectionUtilization',
  	'example_img' => '',
  	'subscription_plan' => 'Regular',
	'area' => 'Network',
	'description' => 'This table shows you the top 10 connections and their utilization rate (% of max channels). If Utilization is above 90% there will be a red indicator, above 75% yellow and below 75% green.',
	'description_ext' => '',
		));

		//Uncomment the below to run the seeder
		DB::table('widgets')->insert($widgets);
		
	//$metrics = Metric::all();
	//foreach ($metrics as $metric) {
	//		$widget = Widget::where('name', '=', $metric->name)->first();
	//		$widget->metrics()->save($metric);
	//	}
		
		
		
	}

}
